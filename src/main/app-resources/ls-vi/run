#!/bin/bash

# source the ciop functions (e.g. ciop-log, ciop-getparam)
source ${ciop_job_include}

set -x 

# define the exit codes
SUCCESS=0
ERR_NO_RESOLUTION=5
ERR_DOWNLOAD_1C=10
ERR_GRANULE_DIR=15
ERR_SEN2COR=20
ERR_LEVEL_2A_DIR=25
ERR_COMPRESSION=30
ERR_PUBLISH=35

# add a trap to exit gracefully
function cleanExit ()
{
  local retval=$?
  local msg=""
  case "${retval}" in
    ${SUCCESS}) msg="Processing successfully concluded";;
    ${ERR_NO_RESOLUTION}) msg="No target resolution provided, must be one of 10, 20 or 60";;
    ${ERR_DOWNLOAD_1C}) msg="Failed to retrieve Sentinel-2 Level 1C product";;
    ${ERR_GRANULE_DIR}) msg="Couldn't find the Sentinel-2 Level 1C product granule directory";;
    ${ERR_SEN2COR}) msg="SEN2COR main binary L2A_Process failed";;
    ${ERR_LEVEL_2A_DIR}) msg="Couldn't find the Sentinel-2 Level 2A product";;
    ${ERR_COMPRESSION}) msg="Failed to compress the Sentinel-2 Level 2A product";;
    ${ERR_PUBLISH}) msg="Failed to publish the Sentinel-2 Level 2A product";;
    *) msg="Unknown error";;
  esac

  [ "${retval}" != "0" ] && ciop-log "ERROR" "Error ${retval} - ${msg}, processing aborted" || ciop-log "INFO" "${msg}"
  exit ${retval}
}

trap cleanExit EXIT

function setOTBenv() {
    
  . /etc/profile.d/otb.sh

  export otb_ram=2048
  export GDAL_DATA=/usr/share/gdal/
}

function getGain() {

  local band=$1

  gain=$( cat $DIR/*_MTL.txt | grep REFLECTANCE_MULT_BAND_${band} | cut -d "=" -f 2 | tr -d " " )

  echo ${gain}

}

function getOffset() {

  local band=$1

  offset=$( cat $DIR/*_MTL.txt | grep REFLECTANCE_ADD_BAND_${band} | cut -d "=" -f 2 | tr -d " " )

  echo ${offset}

}

function DNtoReflectance() {

  local band=$1
  local base_name=$2

  gain=$( getGain ${band} ${base_name} )
  offset=$( getOffset ${band} ${base_name} )

  otbcli_BandMath -il ${base_name}/${base_name}_B${band}.TIF -exp "${gain} * im1b1 + ${offset}" -out ${base_name}/REFLECTANCE_B${band}.TIF

}

function vegetationi() {
  local index=$1
  local base_name=$2

  case $index in
    [LSWI]*)
      band1=5
      band2=6
      ;;
    [NBR]*)
      band1=5
      band2=7
      ;;
    [NDVI]*)
      band1=5
      band2=4
      ;;
    [MNDWI]*)
      band1=3
      band2=6
      ;;

  esac

  otbcli_BandMath -il ${base_name}/REFLECTANCE_B${band1}.TIF ${base_name}/REFLECTANCE_B${band2}.TIF -exp " im1b1 >= 0 && im1b1 <= 1 && im2b1 >= 0 && im2b1 <= 1 ? ( im1b1 - im2b1 ) / ( im1b1 + im2b1 ) : 0  " -out ${base_name}/${base_name}_${index}.TIF

  gdalwarp \
    -r cubic \
    -wm 8192 \
    -multi \
    -srcnodata "0 0 0" \
    -dstnodata "0 0 0" \
    -dstalpha \
    -wo OPTIMIZE_SIZE=TRUE \
    -wo UNIFIED_SRC_NODATA=YES \
    -t_srs EPSG:4326 \
    -co TILED=YES\
    -co COMPRESS=LZW\
    ${base_name}/${base_name}_${index}.TIF ${base_name}/${base_name}_${index}_4326.TIF

  rm -f ${base_name}/${base_name}_${index}.TIF
}

function main() {

  # set OTB environment
  setOTBenv

  cd ${TMPDIR}

  while read input
  do 
    ciop-log "INFO" "Retrieve Landsat 8 product from ${input}"

    # temporary path until eo-samples indes is ready
    # read identifier online_resource < <( opensearch-client ${input} identifier,enclosure | tr "," " " )
    online_resource="s3://eo-samples/LC81950282016069LGN00.tar.gz"
    identifier="LC81950282016069LGN00"

    local_resource="$( echo ${online_resource} | ciop-copy -z -O ${TMPDIR} - )"

    ciop-log "INFO" "Extract Landsat 8 product"
    
    mkdir ${identifier}
    tar xfz ${local_resource} -C ${identifier}

    ciop-log "INFO" "Process vegetation indexes for ${identifier}"

    # SWIR1
    DNtoReflectance 6 ${identifier}

    # NIR
    DNtoReflectance 5 ${identifier}

    # SWIR2
    DNtoReflectance 7 ${identifier}

    # Red
    DNtoReflectance 4 ${identifier}

    # Green
    DNtoReflectance 3 ${identifier}

    for index in LSWI NBR NDVI MNDWI
    do 

      vegetationi ${index} ${identifier}

      ciop-log "INFO" "Publish vegeatation index ${index}"
      ciop-publish -m ${TMPDIR}/${identifier}/${identifier}_${index}_4326.TIF
    
    done

  done

}

cat | main || exit $?
